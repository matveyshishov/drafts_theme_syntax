{
  "name": "CURRENT",
  "autocompleteDefinitions": [
    {
      "trigger": "[[",
      "type": "draft",
      "label": "[[display_title]]",
      "value": "[[display_title]]",
      "queryType": "title",
      "queryTagFilter": "",
      "prefix": "[[",
      "suffix": "]]",
      "enabled": true
    },
    {
      "trigger": "<<",
      "type": "draft",
      "label": "[[display_title]]",
      "value": "[[draft]]",
      "queryType": "title",
      "queryTagFilter": "",
      "prefix": "",
      "suffix": "",
      "enabled": true
    }
  ],
  "scopeName": "text.markdown",
  "description": "Follows Obsidian's Markdown Style, complemented by highlighting of Pandoc Citations and adding both bold AND italic.",
  "author": "Chris Grieser (armenaton/pseudometa/pmbauer) and Matvey",
  "sampleText": "# Academic Writing Markdown\n\nSupports **bold**, _italic_, ==highlights==, ~~strikethrough~~. Pandoc Citations [@Foucault1977], #tags, @mentions.\n\nA footnote.[^1] %%An Obsidian-style comment.%%\n\n{>> GitHub Markdown comment. <<}\n\n{-- GitHub Markdown removal. --}\n\n{++ GitHub Markdown addition. ++}\n\n{~~ GitHub Markdown ~> substitution. ~~}\n\n{== GitHub Markdown highlight. ==}\n\n[^1]: The footnote itself.\nbolditalic _**bai**_, **_bai_**, ***bai***, ___bai___, __*bai*__, *__bai__*\n\nTasks:\n[ ] not started\n[/] in progress\n[x] completed\n[-] canceled",
  "listCompletionDefinitions": [
    {
      "comment": "",
      "enabled": true,
      "match": "(^[ |\\t]*)((\\* \\[[ x]\\]|- \\[[ x]\\]|\\+ \\[[ x]\\]|\\*|-|\\+|>) )(.*)",
      "captures": {
        "indent": "1",
        "prefix": "2",
        "line": "4",
        "sequence": ""
      },
      "replacements": {
        "[x]": "[ ]",
        "{x}": "{ }",
        "{-}": "{ }"
      }
    },
    {
      "comment": "",
      "enabled": true,
      "match": "(^[ |\\t]*)((\\d+)\\. (\\[[ x]\\] )?)(.*)",
      "sequencePadding": "0",
      "captures": {
        "indent": "1",
        "prefix": "2",
        "line": "5",
        "sequence": "3"
      },
      "replacements": {
        "[x]": "[ ]",
        "{x}": "{ }",
        "{-}": "{ }"
      }
    }
  ],
  "indentationPatterns": [
    {
      "match": "(^\\h*\\* |^\\h*\\- |^\\h*\\+ |^\\h*\\d+\\. |^\\h*>[> ]+).*",
      "exclusive": true,
      "comment": "Indent Markdown lists and blockquotes",
      "indentCapture": "1",
      "indentScope": "text.normal"
    }
  ],
  "fileTypes": [
    "markdown",
    "mkdown",
    "md",
    "mdown"
  ],
  "rangeExtensionType": {
    "default": "lookAround1000",
    "macOS": "lookAround1000"
  },
  "patterns": [
    {
      "match": "(?s)(^```)(\\w*$\\n)(.+?)(?=^```)(^```)",
      "exclusive": true,
      "comment": "Fenced code blocks using ```",
      "captures": {
        "1": {
          "scope": "markup.code"
        },
        "2": {
          "scope": "markup.code"
        }
      ,
        "3": {
          "scope": "code.block"
        },
        "4": {
          "scope": "markup.code"
        }
      }
    },
    {
      "match": "(\\B#\\w[\\w-/]+)",
      "exclusive": false,
      "comment": "Match #hashtags",
      "captures": {
        "1": {
          "scope": "color.lightblue"
        }
      }
    },
    {
      "match": "(\\B@\\w[\\w-]+)",
      "exclusive": false,
      "comment": "Match @mentions",
      "captures": {
        "1": {
          "scope": "code.literal"
        }
      }
    },
    {
      "match": "\\[@.*?\\]",
      "exclusive": true,
      "comment": "Markup Pandoc Citations",
      "captures": {
        "0": {
          "scope": "code.literal"
        }
      }
    },
    {
      "match": "((?<!\\\\))(==)(.*?)(\\2)",
      "exclusive": false,
      "comment": "Markup highlight like ==text==",
      "captures": {
        "3": {
          "scope": "markup.highlight"
        },
        "1": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<!\\\\)~~)([\\S?].*?)(~~))",
      "exclusive": false,
      "comment": "Markdown strikethrough like ~~text~~",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.strikethrough"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<!\\\\)%%)([\\S?].*?)(%%))",
      "exclusive": false,
      "comment": "Obsidian's Markdown for %%comments%%",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "code.comment"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "^(#) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like #",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading01"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(##) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like ##",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading02"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(###) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like ###",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading03"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(####) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like ####",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading04"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(#####) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like #####",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading05"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(######) ([^\\n]+?)(\\1?)$",
      "exclusive": true,
      "comment": "Markdown heading like ######",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading06"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^( {4,}(?![->\\*\\+] )(?!\\d\\. )|\\t{1,}(?![->\\*\\+] )(?!\\d\\. ))(\\S+.*)",
      "exclusive": true,
      "comment": "Markdown code blocks starting with 4 spaces or tab",
      "captures": {
        "1": {
          "scope": "code.block"
        },
        "2": {
          "scope": "code.block"
        }
      }
    },
    {
      "match": "^([*\\-_▄…]{3,})$",
      "exclusive": true,
      "comment": "Horizontal rule like *** or --- or .... or ▄▄▄ or ___ or ………",
      "captures": {
        "1": {
          "scope": "markup.horizontalRule"
        }
      }
    },
    {
      "match": "^\\h*(:|\\*|\\-|\\+|\\d+\\.) ",
      "exclusive": false,
      "comment": "Markdown list lines starting with whitespace and -,+,*,:",
      "captures": {
        "1": {
          "scope": "markup.list"
        }
      }
    },
    {
      "match": "^(\\h*>[> ]+)(.*)",
      "exclusive": false,
      "comment": "Markdown quotes starting with > ",
      "captures": {
        "1": {
          "scope": "markup.quotation"
        },
        "2": {
          "scope": "text.quotation"
        }
      }
    },
    {
      "match": "((?<!\\\\)\\{)(\\+\\+)(.*?)(\\2)(\\})",
      "exclusive": true,
      "comment": "Critic Markup additions",
      "captures": {
        "3": {
          "scope": "markup.addition"
        },
        "1": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<!\\\\)\\{)(--)(.*?)(\\2)(\\})",
      "exclusive": true,
      "comment": "Critic Markup deletions",
      "captures": {
        "3": {
          "scope": "markup.deletion"
        },
        "1": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<!\\\\)\\{)(==)(.*?)(\\2)(\\})",
      "exclusive": true,
      "comment": "Critic Markup highlight",
      "captures": {
        "3": {
          "scope": "markup.highlight"
        },
        "1": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<!\\\\)\\{)(>>)(.*?)(<<)(\\})",
      "exclusive": true,
      "comment": "Critic Markup comments",
      "captures": {
        "3": {
          "scope": "critic.comment"
        },
        "1": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<!\\\\)\\{)(~~)(.*?)(~>)(.*?)(\\2)(\\})",
      "exclusive": true,
      "comment": "Critic Markup substitution",
      "captures": {
        "7": {
          "scope": "markup"
        },
        "3": {
          "scope": "markup.substitution"
        },
        "4": {
          "scope": "markup"
        },
        "5": {
          "scope": "markup.substitution"
        },
        "1": {
          "scope": "markup"
        },
        "6": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<![\\\\`])(`)(?![`])([\\S?].*?)(?<![`])(`)(?![\\\\`]))",
      "exclusive": true,
      "comment": "Markdown inline code like `code`",
      "captures": {
        "2": {
          "scope": "markup.code"
        },
        "3": {
          "scope": "code.inline"
        },
        "4": {
          "scope": "markup.code"
        }
      }
    },
    {
      "match": "(\\\\\\\\\\[|\\\\\\\\\\(|\\$\\$)(.*)(\\\\\\\\\\]|\\\\\\\\\\)|\\$\\$)",
      "exclusive": true,
      "comment": "Embedded LaTeX markup wrapped in \\\\[ \\\\], \\\\( \\\\) or $$ $$",
      "captures": {
        "1": {
          "scope": "markup.code"
        },
        "2": {
          "scope": "code.inline"
        },
        "3": {
          "scope": "markup.code"
        }
      }
    },
    {
      "match": "(!?\\[)([^\\[]+)(\\])(\\()(\\S[^\\)]+)(\\))",
      "exclusive": false,
      "comment": "Markdown links like [text](link)",
      "captures": {
        "1": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "5": {
          "scope": "text.url",
          "exclusive": true
        },
        "6": {
          "scope": "markup.link"
        }
      }
    },
    {
      "match": "((\\_\\_\\*)(.*)(\\*\\_\\_))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like __*bai*__",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((\\*\\_\\_)(.*)(\\_\\_\\*))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like *__bai__*",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((\\_\\*\\*)(.*)(\\*\\*\\_))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like _**bai**_",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((\\*\\*\\_)(.*)(\\_\\*\\*))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like**_bai_**",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((\\_\\_\\_)(.*)(\\_\\_\\_))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like ___bai___",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((\\*\\*\\*)(\\.*)(\\*\\*\\*))",
      "exclusive": true,
      "comment": "Markdown bold AND italic like ***bai***",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bolditalic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<![\\\\*_\\w])(\\*|_)(?![\\\\*_])([\\S?].*?)(?<![\\|\\*])(\\2)(?![\\|\\*\\w]))",
      "exclusive": false,
      "comment": "Markdown emphasis like *italic* or _italic_",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.italic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<!\\\\)\\*\\*|__)([\\S?].*?)(\\2))",
      "exclusive": false,
      "comment": "Markdown bold like **bold** or __bold__",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bold"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(\\[)([^\\[ x]+)(\\])( )?(\\[)([^\\]]*)(\\])(?:[^\\(])",
      "exclusive": true,
      "comment": "Markdown reference links like [text][id]",
      "captures": {
        "1": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "5": {
          "scope": "markup.link"
        },
        "6": {
          "scope": "markup.link"
        },
        "7": {
          "scope": "markup.link"
        }
      }
    },
    {
      "match": "(\\[)([^\\[]+)(\\]) ?(\\[)([^\\[]+)(\\])",
      "exclusive": false,
      "comment": "Markdown reference links like [text][ref]",
      "captures": {
        "3": {
          "scope": "markup"
        },
        "1": {
          "scope": "markup"
        },
        "6": {
          "scope": "markup"
        },
        "4": {
          "scope": "markup"
        },
        "2": {
          "scope": "text.link"
        },
        "5": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "^(\\[)([^\\[]+)(\\]:) (.*)",
      "exclusive": true,
      "comment": "Markdown reference like [id]: link",
      "captures": {
        "3": {
          "scope": "markup.link"
        },
        "1": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        }
      }
    },
    {
      "match": "(\\[)(\\^[^\\[]+)(\\])",
      "exclusive": true,
      "comment": "Markdown footnote reference like [^foot]",
      "captures": {
        "1": {
          "scope": "markup"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<![\\\\\\<])<[^>|<|\\n]{1,300}>)",
      "exclusive": false,
      "comment": "html tags",
      "captures": {
        "1": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "\\w([\\^~])(\\w+)",
      "exclusive": false,
      "comment": "Super and subscript markers",
      "captures": {
        "1": {
          "scope": "markup"
        },
        "2": {
          "scope": "markup"
        }
      }
    }
  ],
  "linkDefinitions": [
    {
      "match": "(\\[\\[)(((d|u|s|w|google|wikipedia|bear|url):)?([^\\[]+?))(\\]\\])",
      "templates": {
        "": "drafts://open?title=[[value]]&allowCreate=true",
        "google": "https://www.google.com/search?q=[[value]]",
        "wikipedia": "https://en.wikipedia.org/wiki/[[value]]",
        "u": "drafts://open?uuid=[[value]]",
        "d": "drafts://open?title=[[value]]&allowCreate=true",
        "bear": "bear://x-callback-url/open-note?title=[[value]]",
        "w": "drafts://workspace?name=[[value]]",
        "s": "drafts://quickSearch?query=[[value]]",
        "url": "[[value_unencoded]]"
      },
      "enabled": true,
      "captures": {
        "value": "5",
        "key": "4",
        "prefix": "1",
        "suffix": "6",
        "link": "2"
      },
      "scopes": {
        "value": "text.italic",
        "key": "text.bold",
        "prefix": "markup",
        "suffix": "markup"
      }
    }
  ],
  "navigationPatterns": [
    {
      "match": "^# (.*)$",
      "rangeCapture": "0",
      "comment": "H1 level markdown headers with #",
      "prefix": "H1",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 0
    },
    {
      "match": "^## (.*)$",
      "comment": "H2 level markdown headers with ##",
      "prefix": "H2",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 1
    },
    {
      "match": "^### (.*)$",
      "comment": "H3 level markdown headers with ###",
      "prefix": "H3",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 2
    },
    {
      "match": "^#### (.*)$",
      "comment": "H4 level markdown headers with ####",
      "prefix": "H4",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 3
    },
    {
      "match": "^##### (.*)$",
      "comment": "H5 level markdown headers with #####",
      "prefix": "H5",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 4
    },
    {
      "match": "^###### (.*)$",
      "comment": "H6 level markdown headers with ######",
      "prefix": "H6",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 5
    },
    {
      "match": "\\W*(\\[ ]) *(.*)",
      "comment": "Tasks not started",
      "prefix": "- [ ]",
      "rangeCapture": "0",
      "labelCapture": "2",
      "identifierCapture": "1",
      "level": 3
    },
    {
      "match": "\\W*(\\[/]) *(.*)",
      "comment": "Tasks in progress",
      "prefix": "- [/]",
      "rangeCapture": "0",
      "labelCapture": "2",
      "identifierCapture": "1",
      "level": 3
    },
    {
      "match": "\\W*(\\[-]) *(.*)",
      "comment": "Tasks canceled",
      "prefix": "- [-]",
      "rangeCapture": "0",
      "labelCapture": "2",
      "identifierCapture": "1",
      "level": 3
    },
    {
      "match": "\\W*(\\[[xX]]) *(.*)",
      "comment": "Tasks completed",
      "prefix": "- [x]",
      "rangeCapture": "0",
      "labelCapture": "2",
      "identifierCapture": "1",
      "level": 3
    }
  ],
  "taskMarkDefinitions": [
    {
      "match": "(\\[[ xX/-]\\])",
      "states": [
        "[ ]",
        "[/]",
        "[x]",
        "[-]"
      ],
      "enabled": true,
      "rangeType": "task",
      "captures": {
        "state": "1",
        "interactive": "1"
      },
      "scopes": {
        "interactive": "task"
      }
    }
  ]
}
